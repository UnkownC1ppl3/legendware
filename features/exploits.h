#pragma once

#include "..\includes.h"
#include "..\data.h"
#include "..\globals.h"

class Exploits
{
public:
	bool charging = false;
	bool hide_shots = false;
	bool double_tap = false;
	bool double_tap_shot = false;
	bool in_attack = false;

	int target_tickbase_shift = 0;
	int tickbase_shift = 0;
	int previous_tickbase_shift = 0;
	int ticks_allowed = 0;
	int tickbase_adjust = 0;
	int tickbase_cycle = 0;

	float last_shot = FLT_MAX;
	float last_double_tap_shot = FLT_MAX;
	float last_exploit_time = 0;

	virtual void run(crypt_ptr <CUserCmd> cmd);
	virtual void update();
	virtual bool charge(crypt_ptr <CUserCmd> cmd);
	virtual void correct_charge(crypt_ptr <CUserCmd> cmd);
	virtual void teleport(int ticks, crypt_ptr <CUserCmd> cmd);
	virtual void shift_tickbase(crypt_ptr <CUserCmd> cmd);
	virtual bool trigger_lag(int ticks, crypt_ptr <CUserCmd> cmd);
};